'This SQL project utilises the following data from the Superstore database'

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);
    
-- © Copyright 2025 Break Into Tech  --


'For this project, I used SQL to query the Superstore database to retrieve information about the items sold, their prices, average rating and stock availability'


-- #1 Order by price:


SELECT *
FROM superstore
ORDER BY price;


-- #2 Items where rating ≥ 4.5:


SELECT item_name, average_rating
FROM superstore
WHERE average_rating >= 4.5
ORDER BY average_rating DESC;


-- #3 Items where rating ≤ 4.4:


SELECT item_name, average_rating
FROM superstore
WHERE average_rating <= 4.4
ORDER BY average_rating;


-- #4 Total price per category:


SELECT SUM (price), category
FROM superstore
GROUP BY category
ORDER BY price;


-- #5 Items that are low in stock:


SELECT item_name, category, stock_quantity
FROM superstore
WHERE stock_quantity <= 25
ORDER BY stock_quantity;


-- #6 What's the average rating per item?


SELECT AVG (average_rating), item_name
FROM superstore
GROUP BY item_name
ORDER BY average_rating DESC;


-- #7 How many Premium Coffee Makers are in stock?


SELECT stock_quantity, item_name
FROM superstore
WHERE item_name = 'Premium Coffee Maker';


-- #8 How much does the Slow Cooker cost?


SELECT price, item_name
FROM superstore
WHERE item_name = 'Slow Cooker';


-- #9 What is the average price for electronics?


SELECT AVG (price)
FROM superstore
WHERE category = 'Electronics';
